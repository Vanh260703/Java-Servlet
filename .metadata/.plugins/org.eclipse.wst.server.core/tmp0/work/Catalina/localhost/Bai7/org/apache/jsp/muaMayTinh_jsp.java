/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.96
 * Generated at: 2025-03-04 19:48:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class muaMayTinh_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\" integrity=\"sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js\" integrity=\"sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class = \"container\">\r\n");
      out.write("	<h1>Chọn cấu hình máy tính bạn cần mua</h1>\r\n");
      out.write("	<hr/>\r\n");
      out.write("	<form action=\"datMuaMayTinh.jsp\" method = \"POST\">\r\n");
      out.write("	<h2>Processor</h2>\r\n");
      out.write("		<div class=\"form-check\">\r\n");
      out.write("  <input class=\"form-check-input\" type=\"radio\" name=\"processor\" id = \"CoreI9\" value = \"CoreI9\">\r\n");
      out.write("  <label class=\"\" for=\"CoreI9\">\r\n");
      out.write("    CoreI9\r\n");
      out.write("  </label>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"form-check\">\r\n");
      out.write("  <input class=\"form-check-input\" type=\"radio\" name=\"processor\" id=\"CoreI7\" value = \"CoreI7\" >\r\n");
      out.write("  <label class=\"form-check-label\" for=\"CoreI7\">\r\n");
      out.write("    CoreI7\r\n");
      out.write("  </label>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"form-check\">\r\n");
      out.write("  <input class=\"form-check-input\" type=\"radio\" name=\"processor\" id=\"CoreI5\" value = \"CoreI5\" >\r\n");
      out.write("  <label class=\"form-check-label\" for=\"CoreI5\">\r\n");
      out.write("    CoreI5\r\n");
      out.write("  </label>\r\n");
      out.write("</div>\r\n");
      out.write("<h2>RAM</h2>\r\n");
      out.write("<div class=\"form-check\">\r\n");
      out.write("  <input class=\"form-check-input\" type=\"radio\" name=\"ram\" id=\"8GB\" value = \"8GB\" >\r\n");
      out.write("  <label class=\"form-check-label\" for=\"8GB\">\r\n");
      out.write("    8GB\r\n");
      out.write("  </label>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"form-check\">\r\n");
      out.write("  <input class=\"form-check-input\" type=\"radio\" name=\"ram\" id=\"16GB\" value = \"16GB\" >\r\n");
      out.write("  <label class=\"form-check-label\" for=\"16GB\">\r\n");
      out.write("    16GB\r\n");
      out.write("  </label>\r\n");
      out.write("</div>\r\n");
      out.write("<h2>Monitor</h2>\r\n");
      out.write("<div class=\"form-check\">\r\n");
      out.write("  <input class=\"form-check-input\" type=\"checkbox\" value=\"Monitor\" id=\"monitor\" name = \"monitor\">\r\n");
      out.write("  <label class=\"form-check-label\" for=\"monitor\">\r\n");
      out.write("    Monitor\r\n");
      out.write("  </label>\r\n");
      out.write("</div>\r\n");
      out.write("<h2>Accessories</h2>\r\n");
      out.write("<select class=\"form-select\" multiple aria-label=\"multiple select example\" name = \"accessories\">\r\n");
      out.write("  <option value=\"Camera\">Camera</option>\r\n");
      out.write("  <option value=\"Printer\">Printer</option>\r\n");
      out.write("  <option value=\"Scanner\">Scanner</option>\r\n");
      out.write("</select>\r\n");
      out.write("<button class = \"btn btn-primary\" type = \"submit\">Buy</button>\r\n");
      out.write("	</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
